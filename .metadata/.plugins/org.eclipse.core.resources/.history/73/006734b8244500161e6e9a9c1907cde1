package com.example.chdbuses;

import android.content.Context;
import java.util.*;
import android.view.*;
import android.widget.*;
public class Adapter extends BaseAdapter implements Filterable
{
	Context c;
	ArrayList<Player> players;
	CustomFilter filter;
	ArrayList<Player> filterList;
	
	public Adapter(Context ctx,ArrayList<Player> players)
	{
		this.c=ctx;
	     this.players=players;
	     this.filterList=players;     
	}
	@Override
	public int getCount() {
		// TODO Auto-generated method stub
		return players.size();
	}

	@Override
	public Object getItem(int position) {
		// TODO Auto-generated method stub
		return players.get(position);
		
	}

	@Override
	public long getItemId(int position) {
		// TODO Auto-generated method stub
		return players.indexOf(getItem(position)); 	
	}     

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		// TODO Auto-generated method stub
		LayoutInflater inflater=(LayoutInflater)c.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		
		if(convertView==null)
		{
			convertView=inflater.inflate(R.layout.row, null);
			
		}
		
		TextView nameTxt=(TextView) convertView.findViewById(R.id.nameTv);
		ImageButton img=(ImageButton) convertView.findViewById(R.id.imageView1);
		
		
		//setting data now
		nameTxt.setText(players.get(position).getName());
		img.setImageResource(players.get(position).getImg());
		
		return convertView;
		
	}
////////////////////////////////////
	@Override
	public Filter getFilter() 
	{
		// TODO Auto-generated method stub
		if(filter == null)
		{
			filter= new CustomFilter();
			
		}
		return filter;
		
	}
///////////////////////////////////////
	
	class CustomFilter extends Filter
	{
		
			@Override
			protected FilterResults performFiltering(CharSequence constraint) 
			{
				// TODO Auto-generated method stub
				FilterResults results=new FilterResults();
				if(constraint != null && constraint.length()>0)
				{
					constraint=constraint.toString().toUpperCase();
					ArrayList<Player> filters=new ArrayList<Player>();
					
					for(int i=0;i<filterList.size();i++)
					{
						if(filterList.get(i).getName().toUpperCase().contains(constraint))
						{
							Player p = new Player(filterList.get(i).getName(), filterList.get(i).getImg());
							filters.add(p);
							
						}
					}
					results.count=filters.size();
					results.values=filters;
					
				}
				else{
					results.count=filterList.size();
					results.values=filterList;
					
				}
				
				return results;
			}
	/////////////////////////////////////	
	@Override
	protected void publishResults(CharSequence constraint, FilterResults results) 
	{
		
		// TODO Auto-generated method stub
		players=(ArrayList<Player>) results.values;
		notifyDataSetChanged();
	}
	 
     }
}
