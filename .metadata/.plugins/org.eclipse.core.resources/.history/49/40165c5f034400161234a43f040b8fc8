package com.example.navigationdrawer;

import java.util.*;

import android.app.Activity;
import android.content.res.Configuration;
import android.os.Bundle;
import android.support.v4.app.ActionBarDrawerToggle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;


public class MainActivity extends Activity 
{
	private DrawerLayout layout;
	private ListView List;
	private ActionBarDrawerToggle toggle;
	private DrawerAdapter adp;
	private CharSequence Title;
	private CharSequence mtitle;
	List<DrawerItem> dataList;
	
    @Override
    public void onCreate(Bundle savedInstanceState) 
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        dataList=new ArrayList<DrawerList>();
        
        mtitle=Title=getTitle();
        layout=(DrawerLayout)findViewById(R.id.drawer_layout);
        List=(ListView)findViewById(R.id.left_drawer);
        
        layout.setDrawerShadow(R.drawable.drawer_shadow, GravityCompat.START);
       
        dataList.add(new DrawerList("Message" , R.drawable.ic_messages));
        dataList.add(new DrawerList("Likes" , R.drawable.like));
        dataList.add(new DrawerList("Games" , R.drawable.game));
        dataList.add(new DrawerList("Search" , R.drawable.search));
        dataList.add(new DrawerList("Cloud" ,  R.drawable.cloud));
        dataList.add(new DrawerList("Label" , R.drawable.label));
        dataList.add(new DrawerList("Camera" , R.drawable.ic_camera));
        dataList.add(new DrawerList("Video" , R.drawable.ic_video));
        dataList.add(new DrawerList("Group" , R.drawable.group));
       dataList.add(new DrawerList("Help" , R.drawable.help));
       
       adp = new DrawerAdapter(this,  R.layout.customdrawer, dataList);
       
       List.setAdapter(adp);
    
       List.setOnItemClickListener(new DrawerItemClickListener());
       
       getActionBar().setDisplayHomeAsUpEnabled(true);
       getActionBar().setHomeButtonEnabled(true);
       
       toggle=new ActionBarDrawerToggle(this,layout,R.drawable.ic_drawer,
    		   R.string.drawer_open,R.string.drawer_close)
       {
       
      public void onDrawerClosed(View view)
      {
    	  getActionBar().setTitle(mtitle);
    	  invalidateOptionsMenu();
    	      	  
      }
      public void onDrawerOpened(View drawerView)
      {
    	  getActionBar().setTitle(Title);
    	  invalidateOptionsMenu();
    	      	  
      }
      
       }
       
       layout.setDrawerListener(toggle);
      if(savedInstanceState==null)
      {
    	  SelectedItem(0);
      }
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }
public void SelectedItem(int pos)
{
	Fragment fragment=null;
	Bundle args=new Bundle();
	switch(pos){
	case 0:
		fragment=new Fragment1();
		args.putString(Fragment1.ITEM_NAME,dataList.get(pos).getItemName());
		args.putInt(Fragment1.IMAGE_RESOURCE_ID,dataList.get(pos).getImgResID());
		break;
	case 1:
		fragment=new Fragment2();
	args.putString(Fragment2.ITEM_NAME,dataList.get(pos).getItemName());
	args.putInt(Fragment2.IMAGE_RESOURCE_ID,dataList.get(pos).getImgResID());
	break;
	case 2:
		fragment=new Fragment3();
	args.putString(Fragment3.ITEM_NAME,dataList.get(pos).getItemName());
	args.putInt(Fragment3.IMAGE_RESOURCE_ID,dataList.get(pos).getImgResID());
	break;
	
	case 3:
		fragment=new Fragment1();
		args.putString(Fragment1.ITEM_NAME,dataList.get(pos).getItemName());
		args.putInt(Fragment1.IMAGE_RESOURCE_ID,dataList.get(pos).getImgResID());
		break;
	case 4:
		fragment=new Fragment2();
	args.putString(Fragment2.ITEM_NAME,dataList.get(pos).getItemName());
	args.putInt(Fragment2.IMAGE_RESOURCE_ID,dataList.get(pos).getImgResID());
	break;
	case 5:
		fragment=new Fragment3();
	args.putString(Fragment3.ITEM_NAME,dataList.get(pos).getItemName());
	args.putInt(Fragment3.IMAGE_RESOURCE_ID,dataList.get(pos).getImgResID());
	break;
	case 6:
		fragment=new Fragment1();
		args.putString(Fragment1.ITEM_NAME,dataList.get(pos).getItemName());
		args.putInt(Fragment1.IMAGE_RESOURCE_ID,dataList.get(pos).getImgResID());
		break;
	case 7:
		fragment=new Fragment2();
	args.putString(Fragment2.ITEM_NAME,dataList.get(pos).getItemName());
	args.putInt(Fragment2.IMAGE_RESOURCE_ID,dataList.get(pos).getImgResID());
	break;
	case 8:
		fragment=new Fragment3();
	args.putString(Fragment3.ITEM_NAME,dataList.get(pos).getItemName());
	args.putInt(Fragment3.IMAGE_RESOURCE_ID,dataList.get(pos).getImgResID());
	break;

	case 9:
		fragment=new Fragment1();
		args.putString(Fragment1.ITEM_NAME,dataList.get(pos).getItemName());
		args.putInt(Fragment1.IMAGE_RESOURCE_ID,dataList.get(pos).getImgResID());
		break;
	default:
		break;
		
	}
	fragment.setArguments(args);
	FragmentManager fm = getFragmentManager();
	fm.beginTransaction().replace(R.id.content_frame, fragment).commit();
	
	List.setItemchecked(pos,true);
	setTitle(dataList.get(pos).getItemName());
	layout.closeDrawer(gravity);
	
}
	
@Override
public void onConfigurationChanged(Configuration newConfig) {
	// TODO Auto-generated method stub
	super.onConfigurationChanged(newConfig);
	toggle.onConfigurationChanged(newConfig);
	
}

@Override
public void setTitle(CharSequence title) {
	// TODO Auto-generated method stub
   mtitle=title;
   getActionBar().setTitle(mtitle);
   
}

@Override
protected void onPostCreate(Bundle savedInstanceState) {
	// TODO Auto-generated method stub
	super.onPostCreate(savedInstanceState);
	toggle.syncState();
	
}

public class DrawerItemClickListener implements ListView.OnItemClickListener
{
	public void onItemClick(AdapterView<?> parent, View view,int position,long arg3)
	{
SelectItem(position);		
	}
}


    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
    if(toggle.onOptionsItemSelected(item))
    {
    	return true;
    }
    return false;
    
    }
    }

